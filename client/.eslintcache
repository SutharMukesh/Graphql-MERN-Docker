[{"/graphql-book/client/src/index.js":"1","/graphql-book/client/src/App.js":"2","/graphql-book/client/src/components/BookList.js":"3","/graphql-book/client/src/components/AddAuthor.js":"4","/graphql-book/client/src/components/AddBook.js":"5","/graphql-book/client/src/components/BookDetail.js":"6","/graphql-book/client/src/queries/queries.js":"7"},{"size":268,"mtime":1607184120110,"results":"8","hashOfConfig":"9"},{"size":1878,"mtime":1607264438691,"results":"10","hashOfConfig":"9"},{"size":1810,"mtime":1607265577015,"results":"11","hashOfConfig":"9"},{"size":1884,"mtime":1607275550651,"results":"12","hashOfConfig":"9"},{"size":3368,"mtime":1607275756554,"results":"13","hashOfConfig":"9"},{"size":782,"mtime":1607265473152,"results":"14","hashOfConfig":"9"},{"size":1097,"mtime":1607139565056,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"zioetz",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/graphql-book/client/src/index.js",[],["33","34"],"/graphql-book/client/src/App.js",["35"],"import BookList from \"./components/BookList\";\nimport AddBook from \"./components/AddBook\";\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nimport AddAuthor from \"./components/AddAuthor\";\nimport React from \"react\";\nimport { Navbar } from \"react-bootstrap\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport '../node_modules/react-toastify/dist/ReactToastify.css';\n\nconst serverUrl = process.env.NODE_ENV === \"production\" ? \"/api\" : \"http://localhost:9090\";\n\nconst client = new ApolloClient({\n\turi: `${serverUrl}/graphql`,\n\tcache: new InMemoryCache(),\n});\n\nfunction App() {\n\treturn (\n\t\t<ApolloProvider client={client}>\n\t\t\t{/* <h1 id=\"header\">Book shook</h1> */}\n\t\t\t<div className=\"MainApp\" style={styles.MainApp}>\n      <ToastContainer/>\n\t\t\t\t<Navbar style={styles.Nav}>\n\t\t\t\t\t<Navbar.Brand style={{ color: \"#F92672\" }}>B O O K - S H O O K</Navbar.Brand>\n\t\t\t\t</Navbar>\n\t\t\t\t<div className=\"container\" style={styles.App}>\n\t\t\t\t\t<BookList />\n\t\t\t\t\t<br />\n\t\t\t\t\t<div style={styles.bottomOperations}>\n\t\t\t\t\t\t<AddBook />\n\t\t\t\t\t\t<AddAuthor />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</ApolloProvider>\n\t);\n}\n\nconst styles = {\n\tNav: {\n\t\tbackgroundColor: \"#3E3D32\",\n\t\tjustifyContent: \"center\",\n\t\tboxShadow: \"1px 2px 3px rgba(0,0,0,0.3)\",\n\t},\n\tApp: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t\tflexDirection: \"column\",\n\t\tbackgroundColor: \"#272822\",\n\t},\n\tMainApp: {\n\t\tfontFamily: \"'Jetbrains Mono', 'Arial Narrow', Arial, sans-serif\",\n\t\tbackgroundColor: \"#272822\",\n\t\theight: \"100vh\",\n\t\tlineHeight: 1.2,\n\t},\n\n\tbottomOperations: {\n\t\tmarginBottom: \"15px\",\n\t\tdisplay: \"flex\",\n\t\t// position:\"fixed\",\n\t\t// bottom:0,\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"flex-end\",\n\t\tflexDirection: \"row\",\n\t\tflexWrap: \"wrap\",\n  },\n  toast:{\n    // top:\"1em\",\n    // right:\"1em\",\n    // zIndex:9999,\n    // position:\"fixed\"\n  }\n};\nexport default App;\n","/graphql-book/client/src/components/BookList.js",["36","37","38"],"import { useQuery } from \"@apollo/client\";\nimport React, { useState } from \"react\";\nimport { Accordion, Button, Card, ListGroup, OverlayTrigger, Popover } from \"react-bootstrap\";\nimport { getBooksQuery } from \"../queries/queries\";\nimport BookDetails from \"./BookDetail\";\nfunction BookList() {\n\tconst [selectedBook, setSelectedBook] = useState(\"\");\n\tconst { loading, error, data } = useQuery(getBooksQuery);\n\tif (loading) return <p>Loading...</p>;\n\tif (error) return <p>Error :(</p>;\n\n\treturn (\n\t\t<Accordion id=\"book-list\" style={styles.listGroup}>\n\t\t\t{data.books.map((book) => {\n\t\t\t\treturn (\n\t\t\t\t\t<OverlayTrigger\n\t\t\t\t\t\trootClose={true}\n\t\t\t\t\t\ttrigger=\"click\"\n\t\t\t\t\t\tplacement=\"auto\"\n\t\t\t\t\t\toverlay={\n\t\t\t\t\t\t\t<Popover style={styles.popover} id=\"popover-basic\">\n\t\t\t\t\t\t\t\t<Popover.Content style={styles.popoverContent}>\n\t\t\t\t\t\t\t\t\t<BookDetails bookid={selectedBook}></BookDetails>\n\t\t\t\t\t\t\t\t</Popover.Content>\n\t\t\t\t\t\t\t</Popover>\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tstyle={styles.button}\n\t\t\t\t\t\t\tkey={book.id}\n\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\tif (selectedBook == book.id) {\n\t\t\t\t\t\t\t\t\tsetSelectedBook(\"\");\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetSelectedBook(book.id);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{book.name}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</OverlayTrigger>\n\t\t\t\t);\n\t\t\t})}\n\t\t</Accordion>\n\t);\n}\n\nconst styles = {\n\tlistGroup: {\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"row\",\n\t\tflexWrap: \"wrap\",\n\t\tpadding: \"20px\"\n\t},\n\tbutton: {\n\t\tbackgroundColor: \"#3E3D32\",\n\t\tboxShadow: \"1px 2px 3px rgba(0,0,0,0.3)\",\n\t\tborder: \"1px solid #3E3D32\",\n\t\tmargin: \"5px\",\n\t\tpadding:\"10px\",\n\t\tcolor: \"#ADAFA6\",\n\t},\n\tpopover: {\n\t\tbackgroundColor: \"#3E3D32\",\n\t\tboxShadow: \"1px 2px 3px rgba(0,0,0,0.3)\",\n\t\tborder: \"1px solid #3E3D32\",\n\t\tmargin: \"5px\",\n\t},\n\tpopoverContent:{\n\t\tbackgroundColor: \"#272822\",\n\t\tpadding: \"10px\",\n\t\tcolor: \"#ADAFA6\",\n\t}\n};\nexport default BookList;\n","/graphql-book/client/src/components/AddAuthor.js",[],"/graphql-book/client/src/components/AddBook.js",[],"/graphql-book/client/src/components/BookDetail.js",[],"/graphql-book/client/src/queries/queries.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":7,"column":26,"nodeType":"45","messageId":"46","endLine":7,"endColumn":31},{"ruleId":"43","severity":1,"message":"47","line":3,"column":29,"nodeType":"45","messageId":"46","endLine":3,"endColumn":33},{"ruleId":"43","severity":1,"message":"48","line":3,"column":35,"nodeType":"45","messageId":"46","endLine":3,"endColumn":44},{"ruleId":"49","severity":1,"message":"50","line":32,"column":26,"nodeType":"51","messageId":"52","endLine":32,"endColumn":28},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'ListGroup' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]